#!/usr/bin/env php
<?php

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

use Octava\CodeGenerator\CodeGenerator;
use Octava\CodeGenerator\Configuration;
use Octava\CodeGenerator\Writer;
use Octava\CodeGenerator\Processor\PhpClassProcessor;
use Octava\CodeGenerator\Processor\SimpleProcessor;
use Octava\CodeGenerator\TemplateFactory;
use PhpParser\ParserFactory;
use PhpParser\PrettyPrinter\Standard;

[$destinationPath, $templates, $templateVars, $templatesRoot, $namespace] = parseArgs(getopt('d:f:v:', ['namespace:', 'root:']));

$configuration = new Configuration($destinationPath, $templates, $templateVars);
$generator = new CodeGenerator($configuration, new Writer());
$templates = $generator->scan(new TemplateFactory($configuration));
$processors = [
    new SimpleProcessor(),
    new PhpClassProcessor((new ParserFactory)->create(ParserFactory::PREFER_PHP7), new Standard())
];
$generator->generate($templates, $processors);

function showHelp($error = '') {
    if ($error) {
        echo $error . "\n\n";
    }
    die(<<<OUTPUT
Usage: php bin/code-generator -d path/to/DESTINATION -f path/to/templates [-v '_CG_VAR=VALUE']
Generate PHP code.

Arguments:
-d                - Destination path (Required)
-f                - Template path (Required, Array). Could be directory or file
-v                - Template var (Optional, Array). Format: KEY=VALUE
-root             - Templates root dir (Optional)
--namespace       - Namespace for root dir (Optional)

Examples:
./bin/code-generator -d /tmp/ -f tests/_templates/src/Application/_CG_MODULE_/_CG_MODULE_Service.php -v '_CG_VAR1=Some value' -v '_CG_VAR2=Some Value 2'

OUTPUT
    );
}

function parseArgs($args) {
    if (!isset($args['d'], $args['f']) || !is_string($args['d'])) {
        showHelp('Invalid usage');
    }

    $destinationPath = $args['d'];
    $templates = is_array($args['f']) ? $args['f'] : [$args['f']];
    $templateVars = is_array($args['v']) ? $args['v'] : [$args['v']];
    $templatesRoot = $args['root'] ?? '';
    $namespace = $args['namespace'] ?? '';

    if (!is_dir($destinationPath)) {
        showHelp(sprintf('DESTINATION path does not exists: %s', $destinationPath));
    }
    foreach ($templates as $template) {
        if (!file_exists($template)) {
            throw new RuntimeException(sprintf('Invalid TEMPLATES paths: %s', $template));
        }
    }

    $vars = [];
    foreach ($templateVars as $templateVar) {
        if (preg_match('/^([^=]+)=(.*)/', $templateVar, $matches)) {
            $vars[$matches[1]] = $matches[2];
        }
    }

    return [$destinationPath, $templates, $vars, $templatesRoot, $namespace];
}